package leer.y.ordenar;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.util.StringTokenizer;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

public class Crear extends javax.swing.JFrame {

    JFileChooser seleccion = new JFileChooser();
    File archivo;
    FileInputStream entrada;
    FileOutputStream salida;

    public Crear() {
        initComponents();
        setLocationRelativeTo(null);
        txt_nombre.setEnabled(false);
        
    }
//abrir
    public String abrirarchivo(File archivo) {
        String documento = "";
        try {
            entrada = new FileInputStream(archivo);
            int ascci;
            while ((ascci = entrada.read()) != -1) {
                char caracter = (char) ascci;
                documento += caracter;

            }
        } catch (Exception e) {
        }
        return documento;
    }
//Guardar
    public String Guardar(File archivo, String documento) {
        String mensaje = null;
        try {
            salida = new FileOutputStream(archivo);
            byte[] bytxt = documento.getBytes();
            salida.write(bytxt);
            mensaje = "archivo Guardado";
        } catch (Exception e) {

        }
        return mensaje;
    }
// arbol b
    public class ArbolBinarioOrdenado {
    class Nodo
      {
        String info;
        Nodo izq, der,cla;
      }
      Nodo raiz,Cod;
      
      public ArbolBinarioOrdenado() {
          raiz=null;
          Cod=null;
      }
      
      public void insertar (String info)
      {
          Nodo nuevo = new Nodo ();
          nuevo.info = info;
          nuevo.izq = null;
          nuevo.der = null;
          if (raiz == null && Cod==null) 
              raiz = nuevo;
              
          else
          {
              Nodo anterior = null, reco;
              reco = raiz;
              while (reco != null)
              {
                  anterior = reco;
                  
              int inf=info.compareTo(anterior.info);
                  if (inf < 0)
                      reco = reco.izq;
                  else
                      reco = reco.der;
              }
              int inf=info.compareTo(anterior.info);
              if (inf < 0)
                  anterior.izq = nuevo;
              else
                  anterior.der = nuevo;
          }
      }

      public void imprimirEntre (Nodo reco)
      { 
            String a="",b="",c;
          if (reco != null){
              imprimirEntre(reco.izq);
            
              //cocatenaicon
              txt_salida2.append(reco.info+"\n");
              imprimirEntre (reco.der); 
        }       
      }

      public void imprimirEntre ()
      {
          imprimirEntre (raiz);
          //txt_salida2.setText(raiz.info);
          System.out.println();
      }
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ordenar = new javax.swing.ButtonGroup();
        jTextField1 = new javax.swing.JTextField();
        boton_abrir = new javax.swing.JButton();
        boton_guar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        txt_nombre = new javax.swing.JTextField();
        radio1 = new javax.swing.JRadioButton();
        radio2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        txt_area = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_salida2 = new javax.swing.JTextArea();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        boton_abrir.setText("Abrir");
        boton_abrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_abrirActionPerformed(evt);
            }
        });

        boton_guar.setText("Guardar");
        boton_guar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                boton_guarActionPerformed(evt);
            }
        });

        jButton1.setText("Ordenar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Salir");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Ordenar.add(radio1);
        radio1.setText("Placa");
        radio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radio1ActionPerformed(evt);
            }
        });

        Ordenar.add(radio2);
        radio2.setText("marca y linea");

        txt_area.setColumns(20);
        txt_area.setRows(5);
        jScrollPane1.setViewportView(txt_area);

        txt_salida2.setColumns(20);
        txt_salida2.setRows(5);
        jScrollPane2.setViewportView(txt_salida2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton1)
                                    .addComponent(radio1))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(boton_guar, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(radio2))
                                .addGap(41, 41, 41)
                                .addComponent(jButton2))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 462, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(boton_abrir, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(206, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_abrir)
                    .addComponent(txt_nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radio1)
                    .addComponent(radio2))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(boton_guar)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
//abrir txt
    private void boton_abrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_abrirActionPerformed
        if (seleccion.showDialog(null, "Abrir") == JFileChooser.APPROVE_OPTION) {
            archivo = seleccion.getSelectedFile();
            if (archivo.canRead()) {
                if (archivo.getName().endsWith("txt")) {
                    String documento = abrirarchivo(archivo);
                    txt_area.setText(documento);
                    txt_nombre.setText(archivo.getName());
                } else {
                    JOptionPane.showMessageDialog(null, "Archivo no compatible");
                }
            }
        }
    }//GEN-LAST:event_boton_abrirActionPerformed
//guardar txt
    private void boton_guarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_boton_guarActionPerformed
    if(seleccion.showDialog(null,"Guardar")==JFileChooser.APPROVE_OPTION)
            archivo =seleccion.getSelectedFile();
            if(archivo.getName().endsWith("txt")){
                String documento=txt_salida2.getText();
                String mensaje=Guardar(archivo, documento);
                if(mensaje!=null){
                    JOptionPane.showMessageDialog(null, mensaje);
                }else{
                    JOptionPane.showMessageDialog(null, "Archivo no compatible");
                }
            }
    }//GEN-LAST:event_boton_guarActionPerformed
//salida
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jButton2ActionPerformed
//aqui debe de leer y separar la linea por comas y luego agregarlas al arbol
    public void validar() {
        
    ArbolBinarioOrdenado abo = new ArbolBinarioOrdenado();
        if (radio1.isSelected()) {
     
            String entrada=this.txt_area.getText(),a,b,c,d;
            StringTokenizer Fin=new StringTokenizer(entrada,"\n");
            while (Fin.hasMoreTokens()) {
                
                a=Fin.nextToken(); 
                
                 abo.insertar(a);

                 
            }
                
                 abo.imprimirEntre();
                  
        
       
        } else if (radio2.isSelected()) {
           
            String entrada=this.txt_area.getText(),a,b,c="",d,e,f,g,h,i,ac,ab;
            StringTokenizer Fin=new StringTokenizer(entrada,"\n");
            while (Fin.hasMoreTokens()) {
                a=Fin.nextToken(); 
                
                StringTokenizer token=new StringTokenizer(a,","); 
                while(token.hasMoreTokens()){   
                
                ac=c; 
                b=token.nextToken();
                c=token.nextToken();
                d=token.nextToken();
                e=token.nextToken();
                f=token.nextToken();
                g=token.nextToken();
                h=token.nextToken();
                i=token.nextToken();
                ab=ac+c;
                
                int inf=ac.compareTo(ab);
                  if (inf < 0)
                      abo.insertar(c+"\f"+d+"\f"+a);
                  else{}
                    
                   
                }
                
                    
            }
                   abo.imprimirEntre();
                   
        }
        
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        validar();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void radio1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radio1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radio1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Crear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Crear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Crear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Crear.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Crear().setVisible(true);
            }
        });
    }
    


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup Ordenar;
    public javax.swing.JButton boton_abrir;
    public javax.swing.JButton boton_guar;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JRadioButton radio1;
    private javax.swing.JRadioButton radio2;
    private javax.swing.JTextArea txt_area;
    private javax.swing.JTextField txt_nombre;
    private javax.swing.JTextArea txt_salida2;
    // End of variables declaration//GEN-END:variables
}
